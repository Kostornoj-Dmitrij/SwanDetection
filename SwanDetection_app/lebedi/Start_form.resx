<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAOwAAADsAAAAAAAAAAAA
        AAAAAABCAAAA6wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAADrAAAAQQAAAKEAAACxAAAAMwAAADMAAAAzAAAAMwAAADMAAAAzAAAAMwAAADMAAAAzAAAAMwAA
        ADMAAAAzAAAAMwAAADMAAAAzAAAAMwAAADMAAAAzAAAAMwAAADMAAAAzAAAAMwAAADMAAAAzAAAAMwAA
        ADMAAAAzAAAAMwAAALEAAAChAAAApgAAAJMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAkwAAAKYAAACmAAAAkwAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAACTAAAApgAAAKYAAACUAAAAQgAAANAAAAD/AAAA8QAA
        AIcAAAAKAAAAAAAAAA0AAACOAAAA9AAAAP8AAADIAAAAOgAAAAAAAAAAAAAAPwAAAM0AAAD/AAAA8gAA
        AIsAAAALAAAAAAAAAAoAAACKAAAA8gAAAP8AAADOAAAAQQAAAJQAAACmAAAAeQAAAPMAAAD7AAAAkAAA
        AKEAAADwAAAA3gAAAOUAAAC1AAAA6AAAANkAAABYAAAAPQAAAJkAAAD8AAAAwgAAAMQAAAD8AAAAlAAA
        ADwAAABbAAAA3AAAAOYAAAC1AAAA5gAAAP8AAAB7AAAAPAAAAJMAAAD7AAAA9AAAAHgAAAADAAAAUgAA
        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
        IAP//zBD//8Yg///Hwf//4eH///AD///4B8=
</value>
  </data>
</root>